# HG changeset patch
# User Mike Hommey <mh+mozilla@glandium.org>
# Date 1527491713 -32400
#      Mon May 28 16:15:13 2018 +0900
# Node ID 08a303f9ac47399e6edbf877fe2fee7fd7f0e7f2
# Parent  df185779acc5e369db430942635d125230653e1a
Bug 1464766 - Allow to relax the addon signature requirements. r?rhelmer

diff -r df185779acc5 -r 08a303f9ac47 modules/libpref/init/all.js
--- a/modules/libpref/init/all.js	Tue May 21 14:49:58 2019 +0200
+++ b/modules/libpref/init/all.js	Mon May 28 16:15:13 2018 +0900
@@ -1226,6 +1226,9 @@
 // in a document.
 pref("extensions.spellcheck.inline.max-misspellings", 500);
 
+// Add-on manager scoped allowing unsigned addons. None by default
+pref("extensions.unsignedScopes", 12, locked);
+
 // General prefs for editor.
 // Whether Gecko specific editing UI is enabled by default.
 // Those UIs are not impelemnted by any other browsers.  So, only Firefox users
diff -r df185779acc5 -r 08a303f9ac47 toolkit/mozapps/extensions/content/extensions.js
--- a/toolkit/mozapps/extensions/content/extensions.js	Tue May 21 14:49:58 2019 +0200
+++ b/toolkit/mozapps/extensions/content/extensions.js	Mon May 28 16:15:13 2018 +0900
@@ -53,6 +53,7 @@
 const PREF_UI_LASTCATEGORY = "extensions.ui.lastCategory";
 const PREF_LEGACY_EXCEPTIONS = "extensions.legacy.exceptions";
 const PREF_LEGACY_ENABLED = "extensions.legacy.enabled";
+const PREF_UNSIGNED_SCOPES = "extensions.unsignedScopes";
 
 const LOADING_MSG_DELAY = 100;
 
@@ -316,9 +317,11 @@
 }
 
 function isDisabledUnsigned(addon) {
-  let signingRequired = (addon.type == "locale") ?
-                        AddonSettings.LANGPACKS_REQUIRE_SIGNING :
-                        AddonSettings.REQUIRE_SIGNING;
+  let unsignedScopes = Services.prefs.getIntPref(PREF_UNSIGNED_SCOPES, 0);
+  let signingRequired = !(addon.scope & unsignedScopes) &&
+                        ((addon.type == "locale") ?
+                         AddonSettings.LANGPACKS_REQUIRE_SIGNING :
+                         AddonSettings.REQUIRE_SIGNING);
   return signingRequired && !isCorrectlySigned(addon);
 }
 
diff -r df185779acc5 -r 08a303f9ac47 toolkit/mozapps/extensions/internal/XPIDatabase.jsm
--- a/toolkit/mozapps/extensions/internal/XPIDatabase.jsm	Tue May 21 14:49:58 2019 +0200
+++ b/toolkit/mozapps/extensions/internal/XPIDatabase.jsm	Mon May 28 16:15:13 2018 +0900
@@ -76,6 +76,7 @@
 
 const PREF_DB_SCHEMA                  = "extensions.databaseSchema";
 const PREF_EM_AUTO_DISABLED_SCOPES    = "extensions.autoDisableScopes";
+const PREF_EM_UNSIGNED_SCOPES         = "extensions.unsignedScopes";
 const PREF_PENDING_OPERATIONS         = "extensions.pendingOperations";
 const PREF_XPI_PERMISSIONS_BRANCH     = "xpinstall.";
 const PREF_XPI_SIGNATURES_DEV_ROOT    = "xpinstall.signatures.dev-root";
@@ -1891,7 +1892,9 @@
    *        True if the add-on should not be appDisabled
    */
   isUsableAddon(aAddon) {
-    if (this.mustSign(aAddon.type) && !aAddon.isCorrectlySigned) {
+    let unsignedScopes = Services.prefs.getIntPref(PREF_EM_UNSIGNED_SCOPES, 0);
+    if (!(aAddon._installLocation.scope & unsignedScopes) &&
+        mustSign(aAddon.type) && !aAddon.isCorrectlySigned) {
       logger.warn(`Add-on ${aAddon.id} is not correctly signed.`);
       if (Services.prefs.getBoolPref(PREF_XPI_SIGNATURES_DEV_ROOT, false)) {
         logger.warn(`Preference ${PREF_XPI_SIGNATURES_DEV_ROOT} is set.`);
