# HG changeset patch
# Parent  caaf8579f0cb591dd4c9615f641c9e8e01f75556

diff -r caaf8579f0cb dom/system/OSFileConstants.cpp
--- a/dom/system/OSFileConstants.cpp	Tue May 21 17:27:05 2019 +0200
+++ b/dom/system/OSFileConstants.cpp	Tue Jul 16 14:37:45 2019 +0200
@@ -11,6 +11,8 @@
 
 #include "prsystem.h"
 
+#define DOM_SIZEOF_MEMBER(t,m)  sizeof(((t*)0)->m)
+
 #if defined(XP_UNIX)
 #  include "unistd.h"
 #  include "dirent.h"
@@ -602,6 +604,9 @@
 
     {"OSFILE_SIZEOF_STATVFS", JS::Int32Value(sizeof(struct statvfs))},
 
+    // We have no guarantee how big "f_frsize" is, so we have to calculate that.
+    {"OSFILE_SIZEOF_STATVFS_F_FRSIZE",
+     JS::Int32Value(DOM_SIZEOF_MEMBER(struct statvfs, f_frsize))},
     {"OSFILE_OFFSETOF_STATVFS_F_FRSIZE",
      JS::Int32Value(offsetof(struct statvfs, f_frsize))},
     {"OSFILE_OFFSETOF_STATVFS_F_BAVAIL",
diff -r caaf8579f0cb toolkit/components/osfile/modules/osfile_unix_back.jsm
--- a/toolkit/components/osfile/modules/osfile_unix_back.jsm	Tue May 21 17:27:05 2019 +0200
+++ b/toolkit/components/osfile/modules/osfile_unix_back.jsm	Tue Jul 16 14:37:45 2019 +0200
@@ -225,6 +225,16 @@
        Type.fsblkcnt_t =
          Type.uintn_t(Const.OSFILE_SIZEOF_FSBLKCNT_T).withName("fsblkcnt_t");
 
+       // There is no guarantee of the size or order of members in sys-header structs
+       // It mostly is "unsigned long", but can be "unsigned int" as well.
+       // So it has its own "type".
+       // NOTE: This is still only partially correct, as signedness is also not guaranteed,
+       //       so assuming an unsigned int might still be wrong here.
+       //       But unsigned seems to have worked all those years, even though its signed
+       //       on various platforms.
+       Type.statvfs_f_frsize =
+         Type.uintn_t(Const.OSFILE_SIZEOF_STATVFS_F_FRSIZE).withName("statvfs_f_rsize");
+
        // Structure |statvfs|
        // Use an hollow structure
        {
@@ -232,7 +242,7 @@
            Const.OSFILE_SIZEOF_STATVFS);
 
          statvfs.add_field_at(Const.OSFILE_OFFSETOF_STATVFS_F_FRSIZE,
-                        "f_frsize", Type.unsigned_long.implementation);
+                        "f_frsize", Type.statvfs_f_frsize.implementation);
          statvfs.add_field_at(Const.OSFILE_OFFSETOF_STATVFS_F_BAVAIL,
                         "f_bavail", Type.fsblkcnt_t.implementation);
 
